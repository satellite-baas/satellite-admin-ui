[{"/home/jordan/github/satellite/client-ui/src/App.js":"1","/home/jordan/github/satellite/client-ui/src/AddApiKeyButton.js":"2","/home/jordan/github/satellite/client-ui/src/Navbar.js":"3","/home/jordan/github/satellite/client-ui/src/reportWebVitals.js":"4","/home/jordan/github/satellite/client-ui/src/ApiKeyTable.js":"5","/home/jordan/github/satellite/client-ui/src/ApiManager.js":"6","/home/jordan/github/satellite/client-ui/src/Header.js":"7","/home/jordan/github/satellite/client-ui/src/SchemaManager.js":"8","/home/jordan/github/satellite/client-ui/src/index.js":"9","/home/jordan/github/satellite/client-ui/src/SchemaExplorer.js":"10","/home/jordan/github/satellite/real-client/src/App.js":"11","/home/jordan/github/satellite/real-client/src/Header.js":"12","/home/jordan/github/satellite/real-client/src/ApiKeyTable.js":"13","/home/jordan/github/satellite/real-client/src/SchemaManager.js":"14","/home/jordan/github/satellite/real-client/src/AddApiKeyButton.js":"15","/home/jordan/github/satellite/real-client/src/Navbar.js":"16","/home/jordan/github/satellite/real-client/src/ApiManager.js":"17","/home/jordan/github/satellite/real-client/src/Main.js":"18","/home/jordan/github/satellite/real-client/src/index.js":"19","/home/jordan/github/satellite/real-client/src/SchemaExplorer.js":"20","/home/jordan/github/satellite/real-client/src/reportWebVitals.js":"21","/home/jordan/github/satellite/real-client/src/Home.js":"22","/home/jordan/github/satellite/real-client/src/Authentication.js":"23","/home/jordan/github/satellite/real-client/src/Login.js":"24","/home/jordan/github/satellite/real-client/src/Register.js":"25","/home/jordan/github/satellite/real-client/src/Notification.js":"26","/home/jordan/github/satellite/real-client/src/StaticMananger.js":"27","/home/jordan/github/satellite/real-client/src/FileForm.js":"28","/home/jordan/github/satellite/real-client/src/PublicRoute.js":"29","/home/jordan/github/satellite/real-client/src/ProtectedRoute.js":"30","/home/jordan/github/satellite/real-client/src/Dashboard.js":"31"},{"size":1323,"mtime":1606759232960,"results":"32","hashOfConfig":"33"},{"size":2220,"mtime":1606328589442,"results":"34","hashOfConfig":"33"},{"size":551,"mtime":1606747869592,"results":"35","hashOfConfig":"33"},{"size":362,"mtime":1606314438209,"results":"36","hashOfConfig":"33"},{"size":2994,"mtime":1606745530562,"results":"37","hashOfConfig":"33"},{"size":1194,"mtime":1606747731187,"results":"38","hashOfConfig":"33"},{"size":208,"mtime":1606747943587,"results":"39","hashOfConfig":"33"},{"size":2177,"mtime":1606764507797,"results":"40","hashOfConfig":"33"},{"size":500,"mtime":1606314438209,"results":"41","hashOfConfig":"33"},{"size":532,"mtime":1606755906177,"results":"42","hashOfConfig":"33"},{"size":9599,"mtime":1607985648403,"results":"43","hashOfConfig":"44"},{"size":5302,"mtime":1607117052081,"results":"45","hashOfConfig":"44"},{"size":2223,"mtime":1606833174973,"results":"46","hashOfConfig":"44"},{"size":3536,"mtime":1607524275757,"results":"47","hashOfConfig":"44"},{"size":1872,"mtime":1606850368944,"results":"48","hashOfConfig":"44"},{"size":728,"mtime":1607008785799,"results":"49","hashOfConfig":"44"},{"size":1207,"mtime":1606833006265,"results":"50","hashOfConfig":"44"},{"size":1142,"mtime":1607980626200,"results":"51","hashOfConfig":"44"},{"size":500,"mtime":1607358013264,"results":"52","hashOfConfig":"44"},{"size":578,"mtime":1607358050087,"results":"53","hashOfConfig":"44"},{"size":362,"mtime":1606314438209,"results":"54","hashOfConfig":"44"},{"size":10506,"mtime":1607349298440,"results":"55","hashOfConfig":"44"},{"size":1579,"mtime":1607982610812,"results":"56","hashOfConfig":"44"},{"size":2360,"mtime":1607984219397,"results":"57","hashOfConfig":"44"},{"size":3889,"mtime":1607982461552,"results":"58","hashOfConfig":"44"},{"size":555,"mtime":1606918852324,"results":"59","hashOfConfig":"44"},{"size":7374,"mtime":1607113671754,"results":"60","hashOfConfig":"44"},{"size":1517,"mtime":1607106661647,"results":"61","hashOfConfig":"44"},{"size":599,"mtime":1607983809089,"results":"62","hashOfConfig":"44"},{"size":487,"mtime":1607983839653,"results":"63","hashOfConfig":"44"},{"size":1208,"mtime":1607983638656,"results":"64","hashOfConfig":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6g18n6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18yp9pv",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jordan/github/satellite/client-ui/src/App.js",["144","145","146","147"],"/home/jordan/github/satellite/client-ui/src/AddApiKeyButton.js",["148"],"import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst AddApiKeyButton = ({ addKey }) => {\n  const [show, setShow] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const handleOpenModal = (e) => {\n    setShow(true);\n  };\n\n  const handleCloseModal = (e) => {\n    setShow(false);\n  };\n\n  const handleAdd = (e) => {\n    setShow(false);\n    addKey(isAdmin);\n    setIsAdmin(false);\n  };\n\n  const handleCheckAdmin = (e) => {\n    setIsAdmin(true);\n  };\n\n  const handleCheckClient = (e) => {\n    setIsAdmin(false);\n  };\n\n  return (\n    <div className=\"content\">\n      <button\n        className=\"button is-medium\"\n        onClick={handleOpenModal}\n      >\n        New API Key\n      </button>\n      <Modal \n        show={show} \n        onHide={handleCloseModal}\n      >\n        <Modal.Header \n          closeButton\n        >\n          <Modal.Title>Create API Key</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"field\">\n            <label className=\"label\">Name</label>\n            <div className=\"control\">\n              <label className=\"radio\">\n                <input \n                  type=\"radio\" \n                  name=\"permissions\" \n                  checked={isAdmin}\n                  onChange={handleCheckAdmin}\n                />\n                Admin\n              </label>\n              <label className=\"radio\">\n                <input \n                  type=\"radio\" \n                  name=\"permissions\" \n                  checked={!isAdmin}\n                  onChange={handleCheckClient}\n                />\n                Client\n              </label>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            className=\"button\"\n            variant=\"secondary\"\n            onClick={handleCloseModal}\n          >\n            Close\n          </Button>\n          <Button\n            className=\"button is-primary\"\n            variant=\"primary\"\n            onClick={handleAdd}\n          >\n            Create API Key\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddApiKeyButton;","/home/jordan/github/satellite/client-ui/src/Navbar.js",["149","150","151","152","153","154"],"/home/jordan/github/satellite/client-ui/src/reportWebVitals.js",[],"/home/jordan/github/satellite/client-ui/src/ApiKeyTable.js",["155","156"],"import React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, Button } from 'react-bootstrap';\n\nimport './ApiKeyTable.css';\n\nconst ApiKeyTable = ({ keys, deleteKey }) => {\n  const [shownKey, setShownKey] = useState(null);\n  const [showDelete, setShowDelete ] = useState(false);\n  const [keyToDelete, setKeyToDelete] = useState(null);\n\n  const handleCopyKey = (id) => {\n    const key = keys.filter(key => key.id === id)[0];\n\n    navigator.clipboard.writeText(key.key).then(() => {\n      return true;\n    }, () => {\n      return null;\n    });\n  };\n\n  const handleDelete = () => {\n    setShowDelete(false);\n    deleteKey(keyToDelete);\n  };\n\n  const handleOpenModal = (id) => {\n    if (keys.length === 1) return null;\n\n    setShowDelete(true);\n    setKeyToDelete(id)\n  };\n\n  const handleCloseModal = (e) => {\n    setShowDelete(false);\n  };\n\n  return (\n    <div>\n      <Modal \n        show={showDelete} \n        onHide={handleCloseModal}\n      >\n        <Modal.Header \n          closeButton\n        >\n          <Modal.Title>Delete API Key</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Are you sure you'd like to delete this API key? This action is irreversible.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            className=\"button\"\n            variant=\"secondary\"\n            onClick={handleCloseModal}\n          >\n            Close\n          </Button>\n          <Button\n            className=\"button is-primary\"\n            variant=\"primary\"\n            onClick={handleDelete}\n          >\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Table hover bordered striped>\n        <thead>\n          <tr>\n            <th>Key</th>\n            <th>Permissions</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {keys.map(function(key, i) {\n            return (\n              <tr key={i}>\n                <td\n                  id={key.id}\n                  onClick={() => handleCopyKey(key.id)}\n                >\n                  { key.admin ? \"*\".repeat(key.key.length) : key.key }\n                </td>\n                <td>{key.admin ? \"Admin\" : \"Client\"}</td>\n                <td>\n                  <span>\n                    <FontAwesomeIcon \n                      icon={faCopy} \n                      onClick={() => handleCopyKey(key.id)} \n                      className=\"action-icon\"\n                    />\n                    <FontAwesomeIcon \n                      icon={faTrashAlt} \n                      onClick={() => handleOpenModal(key.id)}\n                      className=\"action-icon\"\n                    />\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ApiKeyTable;","/home/jordan/github/satellite/client-ui/src/ApiManager.js",[],"/home/jordan/github/satellite/client-ui/src/Header.js",["157"],"/home/jordan/github/satellite/client-ui/src/SchemaManager.js",["158"],"/home/jordan/github/satellite/client-ui/src/index.js",[],"/home/jordan/github/satellite/client-ui/src/SchemaExplorer.js",[],"/home/jordan/github/satellite/real-client/src/App.js",["159","160","161","162","163","164","165","166"],"/home/jordan/github/satellite/real-client/src/Header.js",[],"/home/jordan/github/satellite/real-client/src/ApiKeyTable.js",["167","168","169","170","171"],"import React, { useState } from 'react';\nimport AddApiKeyButton from './AddApiKeyButton';\n\nimport './ApiKeyTable.css';\n\nconst ApiKeyTable = ({ keys, deleteKey, addKey }) => {\n  const [shownKey, setShownKey] = useState(null);\n  const [showDelete, setShowDelete ] = useState(false);\n  const [keyToDelete, setKeyToDelete] = useState(null);\n\n  const handleCopyKey = (id) => {\n    const key = keys.filter(key => key.id === id)[0];\n\n    navigator.clipboard.writeText(key.key).then(() => {\n      return true;\n    }, () => {\n      return null;\n    });\n  };\n\n  const handleDelete = () => {\n    setShowDelete(false);\n    deleteKey(keyToDelete);\n  };\n\n  const handleOpenModal = (id) => {\n    if (keys.length === 1) return null;\n\n    setShowDelete(true);\n    setKeyToDelete(id)\n  };\n\n  const handleCloseModal = (e) => {\n    setShowDelete(false);\n  };\n\n  return (\n    <div className=\"box\" style={{ padding: \"2rem\" }}>\n      <table className=\"table is-fullwidth\">\n        <thead>\n          <tr>\n            <th>Key</th>\n            <th>Permissions</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {keys.map(function(key, i) {\n            return (\n              <tr key={i}>\n                <td\n                  id={key.id}\n                  onClick={() => handleCopyKey(key.id)}\n                >\n                  { key.admin ? \"*\".repeat(key.key.length) : key.key }\n                </td>\n                <td>{key.admin ? \"Admin\" : \"Client\"}</td>\n                <td>\n                  <span \n                    className=\"icon toggle\" \n                    onClick={() => handleCopyKey(key.id)}\n                  >\n                    <i className=\"fas fa-copy\"></i>\n                  </span> \n                  |\n                  <span \n                    className=\"icon delete-backend\"\n                    onClick={() => handleOpenModal(key.id)}\n                  >\n                    <i \n                      className=\"fas fa-trash-alt\"\n                    ></i>\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <AddApiKeyButton addKey={addKey} />\n    </div>\n  );\n};\n\nexport default ApiKeyTable;","/home/jordan/github/satellite/real-client/src/SchemaManager.js",["172","173"],"import React, { useState } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/lint/lint';\nimport 'codemirror-graphql/hint';\nimport 'codemirror-graphql/lint';\nimport 'codemirror-graphql/mode';\n\nclass SchemaManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      schema: '# Loading schema...',\n      notification: null\n    };\n  }\n\n  componentDidMount() {\n    // retrieve actual schema from Dgraph\n    const context = this;\n    const query = `\n      {\n        getGQLSchema {\n          schema\n        }\n      }\n    `;\n\n    fetch(`http://localhost:3030/admin`, {\n      method: 'POST',\n      headers: { \n       'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ query })\n    })\n    .then(res => res.json())\n    .then(json => {\n      setTimeout(() => {\n        context.handleUpdateSchema(json.data.getGQLSchema.schema);\n      }, 1000);\n    })\n    .catch(err => {\n      context.handleUpdateSchema('# Could not load schema from backend.');\n    });\n  }\n\n  handleUpdateSchema = (schema) => {\n    this.setState({ schema });\n  };\n\n  handleSubmitSchema = () => {\n    const context = this;\n    const mutation = `\n    {\n      updateGQLSchema(\n        input: { set: { schema: \"${this.state.schema}\"}}\n      ) {\n        gqlSchema {\n          schema\n          generatedSchema\n        }\n      }\n    }\n    `;\n\n    this.setState({\n      notification: {\n        type: 'light',\n        msg: 'Updating schema...'\n      }\n    });\n\n    fetch(`http://localhost:3030/admin/schema`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-binary'\n      },\n      body: this.state.schema\n    })\n    .then(res => {\n      return res.json();\n    })\n    .then(json => {\n      if (json.errors) {\n        this.setState({\n          notification: {\n            type: 'danger',\n            msg: 'There is an issue with the schema. Could not update.'\n          }\n        });\n      \n        return;\n      } \n\n      this.setState({ notification: {\n        type: 'success',\n        msg: 'Schema successfully updated.'\n      }});\n    })\n    .catch(err => {\n      this.handleUpdateSchema('# Could not update schema.');\n      context.setState({ \n        notification: {\n          type: 'danger',\n          msg: 'Could not update schema due to connection error.'\n        }\n      });\n    });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ notification: null });\n  };\n\n  render() {\n    return (\n      <div \n        style={{ textAlign: 'left' }}\n      >\n        <h1 className=\"title is-2\">Schema</h1>\n        {this.state.notification &&         \n          <div className={`mb-3 notification is-${this.state.notification.type}`}>\n            <button className=\"delete\" onClick={this.handleCloseDelete}></button>\n            {this.state.notification.msg}\n          </div>\n        }\n        <div className=\"box\" style={{ padding: \"2rem\" }}>\n          <CodeMirror \n            value={this.state.schema}\n            options={{\n              mode: 'graphql',\n              theme: 'material',\n              lineNumbers: true,\n              tabSize: 2\n            }}\n            onChange={(editor, data, value) => this.handleUpdateSchema(value)}\n          />\n          <button\n            className=\"button is-info is-fullwidth mt-2\"\n            onClick={this.handleSubmitSchema}\n          >\n            Deploy\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SchemaManager;",["174","175"],"/home/jordan/github/satellite/real-client/src/AddApiKeyButton.js",["176","177","178"],"import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddApiKeyButton = ({ addKey }) => {\n  const [show, setShow] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const handleOpenModal = (e) => {\n    setShow(true);\n  };\n\n  const handleCloseModal = (e) => {\n    setShow(false);\n  };\n\n  const handleAdd = (e) => {\n    setShow(false);\n    addKey(isAdmin);\n    setIsAdmin(false);\n  };\n\n  const handleCheckAdmin = (e) => {\n    setIsAdmin(true);\n  };\n\n  const handleCheckClient = (e) => {\n    setIsAdmin(false);\n  };\n\n  return (\n    <div>\n      <button\n        className=\"button is-fullwidth is-info mt-5\"\n        onClick={handleOpenModal}\n      >\n        New API Key\n      </button>\n      <div className={`modal ${show ? \"is-active\" : \"\"}`}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            New API Key\n          </header>\n          <section className=\"modal-card-body\">\n            <p></p>\n            <div className=\"control\">\n              <label className=\"radio\">\n                <input type=\"radio\" name=\"permissions\" checked={isAdmin}/>\n                Admin\n              </label>\n              <label className=\"radio\">\n                <input type=\"radio\" name=\"permissions\" checked={!isAdmin} />\n                Client\n              </label>\n            </div>\n          </section>\n          <footer className=\"modal-card-foot\">\n            <button className=\"button is-info\" onClick={handleAdd}>Create API Key</button>\n            <button className=\"button\" onClick={handleCloseModal}>Cancel</button>\n          </footer>\n        </div>\n        <button \n          className=\"modal-close is-large\" \n          onClick={handleCloseModal}\n        ></button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddApiKeyButton;",["179","180"],"/home/jordan/github/satellite/real-client/src/Navbar.js",["181"],"import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst NavbarHeader = () => {\n  return (\n    <aside className=\"menu sidebar-nav\">\n      <p className=\"menu-label\">Overview</p>\n      <ul className=\"menu-list\">\n        <li>  \n          <Link to=\"/\">Home</Link>\n        </li>\n      </ul>\n      <p className=\"menu-label\">Schema</p>\n      <ul className=\"menu-list\">\n        <li><Link to=\"/explorer\">API Explorer</Link></li>\n        <li><Link to=\"/schema\">Schema Manager</Link></li>     \n      </ul>\n      <p className=\"menu-label\">Assets</p>\n      <ul className=\"menu-list\">\n        <li><Link to=\"/files\">Static File Manager</Link></li>\n      </ul>\n    </aside> \n  );\n};\n\nexport default NavbarHeader;",["182","183"],"/home/jordan/github/satellite/real-client/src/ApiManager.js",["184"],"import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport AddApiKeyButton from './AddApiKeyButton';\nimport ApiKeyTable from './ApiKeyTable';\n\nconst initialState = [{\n  id: 1,\n  key: uuidv4(),\n  admin: true\n}, {\n  id: 2,\n  key: uuidv4(),\n  admin: false\n}, {\n  id: 3,\n  key: uuidv4(),\n  admin: true\n}];\n\nconst sorter = (keys) => {\n  return keys.slice(0).sort((f, s) => s.admin - f.admin);\n};\n\nconst ApiManager = () => {\n  const [keys, setKeys] = useState([]);\n\n  useEffect(() => {\n    // fetch API to get keys\n    setKeys(sorter(initialState));\n  }, []);\n  \n  const addKey = (isAdmin) => {\n    // generate uuid for key\n    // add to database\n    // add in state\n\n    const newKey = {\n      key: uuidv4(),\n      admin: isAdmin\n    };\n\n    setKeys(sorter(keys.concat(newKey)));\n  };\n\n  const deleteKey = (id) => {\n    const newKeys = keys.filter(key => key.id !== id);\n\n    // make API call to delete\n    \n    setKeys(newKeys);\n  };\n\n  return (\n    <div>\n      <h1 className=\"title is-2 has-text-left\">API Key Manager</h1>\n      <ApiKeyTable \n        keys={keys}\n        deleteKey={deleteKey}\n        addKey={addKey}\n      />\n    </div>\n  );\n};\n\nexport default ApiManager;",["185","186"],"/home/jordan/github/satellite/real-client/src/Main.js",[],"/home/jordan/github/satellite/real-client/src/index.js",[],"/home/jordan/github/satellite/real-client/src/SchemaExplorer.js",[],"/home/jordan/github/satellite/real-client/src/reportWebVitals.js",[],["187","188"],"/home/jordan/github/satellite/real-client/src/Home.js",["189"],"import React from 'react';\n\nconst iconSpanStyle = {\n  height: '1em',\n  width: '1em'\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      healthy: false,\n      uptime: 0,\n      intervalID: null,\n      show: false,\n      showAPI: false,\n      apiVisible: false,\n      endpointVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.healthCheck();\n\n    const intervalID = setInterval(() => {\n      this.healthCheck();\n    }, 10000);\n\n    this.setState({ intervalID });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalID);\n  }\n\n  healthCheck = () => {\n    const context = this;\n    const query = `\n      {\n        health {\n          instance\n          status\n          uptime\n        }\n      }\n    `;\n\n    fetch(`http://localhost:3030/health`, {\n      method: 'GET'\n    })\n    .then(res => {\n      context.setState({\n        healthy: true\n      })\n    })\n    .catch(err => {\n      context.setState({\n        healthy: false\n      });\n    });\n\n    // fetch(`http://${this.props.satellite.name}.${DOMAIN}:5000/admin`, {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     'X-API-Key': `${API_KEY}`\n    //   },\n    //   body: JSON.stringify({ query })\n    // })\n    // .then(res => res.json())\n    // .then(json => {\n    //   const alpha = json.data.health[json.data.health.length - 1];\n\n    //   context.setState({\n    //     healthy: alpha.status === 'healthy',\n    //     uptime: alpha.uptime\n    //   });\n    // })\n    // .catch(err => {\n    //   context.setState({\n    //     healthy: false,\n    //     uptime: 0\n    //   });\n    // })\n  };\n\n  handleOpenAPIModal = () => {\n    this.setState({ showAPI: true });\n  };\n\n  handleCloseAPIModal = () => {\n    this.setState({ showAPI: false });\n  };\n\n  handleGetNewAPIKey = () => {\n    this.props.handleNewAPIKey();\n    this.handleCloseAPIModal();\n  };\n\n  handleOpenModal = () => {\n    this.setState({ show: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ show: false });\n    this.props.clearDone();\n  };\n\n  handleConfirmDestroy = () => {\n    this.props.handleDestroySatellite();\n  };\n\n  handleShowField = (field) => {\n    if (field === 'static') {\n      this.setState({ staticVisible: !this.state.staticVisible });\n    }\n\n    if (field === 'api') {\n      this.setState({ apiVisible: !this.state.apiVisible });\n    }\n\n    if (field === 'endpoint') {\n      this.setState({ endpointVisible: !this.state.endpointVisible });\n    }\n\n    return;\n  };\n\n  handleCopy = (copyValue) => {\n    navigator.clipboard.writeText(copyValue).then(() => {\n      return true;\n    }, () => {\n      return null;\n    });\n  };\n\n  render() { \n    const { satellite, loading, done } = this.props;\n\n    return (\n      <>\n        <div className={`modal ${this.state.show ? \"is-active\" : \"\"}`}>\n          <div className=\"modal-background\">\n            <div id=\"centered-modal\" className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                Destroy Satellite\n              </header>\n              {!loading && !done && (\n                <>\n                  <section className=\"modal-card-body\">\n                    <p className=\"subtitle\">Are you sure you want to destroy this Satellite? This action is irreversible.</p>\n                  </section>\n                  <footer className=\"modal-card-foot\">\n                    <button \n                      className=\"button is-danger\" \n                      onClick={this.handleConfirmDestroy}\n                    >Destroy Satellite</button>\n                    <button \n                      className=\"button\" \n                      onClick={this.handleCloseModal}\n                    >\n                      Cancel\n                    </button>\n                  </footer>\n                </>\n              )}\n              {loading && (\n                <>\n                  <section className=\"modal-card-body\">\n                    <progress\n                      className=\"progress is-medium is-danger\"\n                    >\n                      15%\n                    </progress>\n                  </section>\n                  <footer className=\"modal-card-foot\"></footer>\n                </>\n              )}\n              {done && (\n                <>\n                  <section className=\"modal-card-body\">\n                    <p className=\"subtitle\">\n                      {done.msg}\n                    </p>\n                  </section>\n                  <footer className=\"modal-card-foot\"></footer>\n                </>\n              )}\n            </div>\n            {!loading && (\n              <button\n                className=\"modal-close is-large\"\n                onClick={this.handleCloseModal}\n              ></button>\n            )}\n          </div>\n        </div>\n        <div className={`modal ${this.state.showAPI ? \"is-active\" : \"\"}`}>\n          <div className=\"modal-background\">\n            <div id=\"centered-modal\" className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                New API Key\n              </header>\n              <section className=\"modal-card-body\">\n                <p className=\"subtitle\">Changing the API key requires updating all client applications. Are you sure you want to do this?</p>\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button \n                  className=\"button is-danger\" \n                  onClick={this.handleGetNewAPIKey}\n                >Create API Key</button>\n                <button \n                  className=\"button\" \n                  onClick={this.handleCloseAPIModal}\n                >\n                  Cancel\n                </button>\n              </footer>\n            </div>\n            <button\n              className=\"modal-close is-large\"\n              onClick={this.handleCloseAPIModal}\n            ></button>\n          </div>\n        </div>\n        { satellite ? (\n          <>\n            <div className=\"columns is-centered is-multiline\">\n              \n              <div className=\"column is-three-quarters\">\n                <h1 className=\"title is-2 has-text-left\">\n                  {satellite.name}\n                  <span \n                    className={`tag ${this.state.healthy ? 'is-success' : 'is-danger'} ml-4 health-tag is-medium`}\n                  >\n                    {this.state.healthy ? 'Healthy' : 'Down'}\n                  </span>\n                </h1>\n                <div className=\"box has-text-left\">\n                  <div className=\"control has-icons-right\">\n                    <h1 \n                      className=\"title is-4\"\n                      onClick={() => this.handleShowField('endpoint')}\n                    >\n                      Endpoint\n                      <span\n                        style={iconSpanStyle}\n                        className={`icon is-right ${this.state.endpointVisible ? 'is-active' : 'is-hidden'}`}\n                      >\n                        <i className={`fas fa-angle-double-up dropdown-icon`}></i>\n                      </span>\n                      <span\n                        style={iconSpanStyle}\n                        className={`icon is-right ${!this.state.endpointVisible ? 'is-active' : 'is-hidden'}`}\n                      >\n                        <i className={`fas fa-angle-double-down dropdown-icon`}></i>\n                      </span>\n                    </h1>\n                  </div>\n                  <div className={this.state.endpointVisible ? 'is-active' : 'is-hidden'}>\n                    <p className=\"subtitle is-5 mt-4\">\n                      {satellite.endpoint}\n                      <span className=\"icon is-small ml-3\">\n                        <i className=\"far fa-copy clicky\"></i>\n                      </span>\n                    </p>\n                  </div>\n\n                </div>\n                <div className=\"box has-text-left\">\n                  <div className=\"control has-icons-right\">\n                    <h1 \n                      className=\"title is-4\" \n                      onClick={() => this.handleShowField('api')}\n                    >API Key\n                      <span\n                        style={iconSpanStyle}\n                        className={`icon is-right ${this.state.apiVisible ? 'is-active' : 'is-hidden'}`}\n                      >\n                        <i className={`fas fa-angle-double-up dropdown-icon`}></i>\n                      </span>\n                      <span\n                        style={iconSpanStyle}\n                        className={`icon is-right ${!this.state.apiVisible ? 'is-active' : 'is-hidden'}`}\n                      >\n                        <i className={`fas fa-angle-double-down dropdown-icon`}></i>\n                      </span>\n                    </h1>\n                  </div>\n                  <div className={this.state.apiVisible ? 'is-active' : 'is-hidden'}>\n                    <p className=\"subtitle mt-4\">\n                      {satellite.apiKey}\n                      <span \n                        className=\"icon is-small ml-3\"\n                        onClick={() => this.handleCopy(satellite.apiKey)}\n                      >\n                          <i className=\"far fa-copy clicky\"></i>\n                      </span>\n                      <span \n                        className=\"icon is-small ml-3\"\n                        onClick={this.handleOpenAPIModal}\n                      >\n                          <i className=\"fas fa-redo clicky\"></i>\n                      </span>                \n                    </p>\n                  </div>\n                </div>\n                <div className=\"box has-text-left\">\n                  <div className=\"buttons is-centered\">\n                    <button \n                      className=\"button is-danger is-medium is-light is-fullwidth\"\n                      onClick={this.handleOpenModal}\n                    >\n                      Destroy Satellite\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"columns is-centered\">\n            <div className=\"column is-half\">\n              <div className=\"box\">\n                <p className=\"subtitle\">\n                  You have not launched any satellites.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n      </>\n    );\n  }\n};\n\nexport default Home;",["190","191"],"/home/jordan/github/satellite/real-client/src/Authentication.js",[],"/home/jordan/github/satellite/real-client/src/Login.js",["192"],"/home/jordan/github/satellite/real-client/src/Register.js",["193"],"import React, { useState } from 'react';\nimport Notification from './Notification';\nimport { Link } from 'react-router-dom';\n\nconst Register = ({ \n  onSignup, \n  handleUpdateMessage, \n  origin\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handlePWConfirmationChange = (e) => {\n    setPasswordConfirmation(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    // actual value will be window location origin\n    const params = {\n      email, \n      password\n    };\n    \n    console.log(`${origin}/signup`)\n    fetch(`${origin}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    })\n    .then(res => res.json())\n    .then(json => {\n      if (json.error) {\n        handleUpdateMessage(json.error, false);\n        return;\n      }\n\n      handleUpdateMessage('Successfully registered.', true);\n      \n      setTimeout(() => {\n        onSignup();\n      }, 1000);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n\n    // check params for validity\n    // if (password.trim().length < password.length || username.trim().length < username.length) {\n    //   handleUpdateMessage('Credentials can not contain spaces.', false);\n    //   return;\n    // }\n\n    // if (password !== passwordConfirmation) {\n    //   handleUpdateMessage('Passwords do not match.', false);\n    //   return;\n    // }\n\n    // if (password.length < 8) {\n    //   handleUpdateMessage('Password must be at least 8 characters.', false);\n    //   return; \n    // }\n\n    // // make fetch to controller to determine authenticity\n    // const payload = {\n    //   username,\n    //   password,\n    //   passwordConfirmation\n    // };\n\n    // if good, go to Login and set success notification\n    \n    \n\n    // if bad, render error\n    \n    // handleUpdateMessage('Unable to register.', false);\n  };\n\n  return (\n    <>\n      <div className=\"field\">\n        <label className=\"label\">Email</label>\n        <div className=\"control has-icons-left\">\n          <input \n            className=\"input\" \n            value={email}\n            onChange={handleEmailChange}\n            type=\"text\"\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\"></i>\n          </span>\n        </div>\n\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Password</label>\n        <div className=\"control has-icons-left\">\n          <input \n              className=\"input\" \n              value={password}\n              onChange={handlePasswordChange}\n              type=\"password\"\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-key\"></i>\n            </span>\n        </div>\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Password Confirmation</label>\n        <div className=\"control has-icons-left\">\n          <input \n              className=\"input\" \n              value={passwordConfirmation}\n              onChange={handlePWConfirmationChange}\n              type=\"password\"\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-key\"></i>\n            </span>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <button \n            className=\"button is-info\" \n            onClick={handleSubmit}\n          >\n            Register\n          </button>\n        </div>\n      </div>\n      <Link\n        to=\"/login\"\n      >\n        Already have an account? Login instead.\n      </Link>  \n    </>\n  );\n};\n\nexport default Register;","/home/jordan/github/satellite/real-client/src/Notification.js",["194"],"import React, { useState } from 'react';\n\nconst Notification = ({ message, success, removeNotification }) => {\n  const [showDelete, setShowDelete] = useState(true);\n\n  const handleDeleteClose = () => {\n    removeNotification();\n  };\n\n  return (\n    <div className={`notification ${success ? 'is-success' : 'is-danger'}`}>\n      { showDelete ? (\n        <button \n          className=\"delete\"\n          onClick={handleDeleteClose}\n        >\n        </button>\n      ) : (\n        null\n      )}\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;","/home/jordan/github/satellite/real-client/src/StaticMananger.js",["195","196"],"import React, { useState } from 'react';\nimport FileForm from './FileForm';\n\nconst condenseName = (name) => {\n  return name.split(' ').join('_').toLowerCase();\n};\n\nclass StaticManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n      showUpload: false,\n      loading: false,\n      done: false,\n      files: [],\n      selectedFile: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3030/files`)\n    .then(res => { \n      return res.json();\n    })\n    .then(json => {\n      this.setState({\n        files: json\n      });\n    })\n    .catch(err => {\n      this.setState({\n        done: {\n          type: 'danger',\n          msg: 'Could not fetch files. Contact an administrator.'\n        }\n      });\n    });\n  }\n\n  handleOpenModal = (name) => {\n    this.setState({\n      selectedFile: name\n    });\n  };\n\n  getSize = (size) => {\n    let updatedSize;\n\n    if (size < 1000) {\n      return `< 1KB`;\n    } else if (size > 1000000000) { \n      updatedSize = Math.round(size / 1000000000 * 10) / 10;\n      return `${updatedSize}GB`\n    } else if (size > 1000000) {\n      updatedSize = Math.round(size / 1000000 * 10) / 10;\n      return `${updatedSize}MB`;\n    } else {\n      return `${Math.round(size / 1000 * 10) / 10}KB`;\n    }\n  };\n\n  handleUploadClick = () => {\n    this.setState({\n      showUpload: true\n    });\n\n\n  };\n\n  handleUpload = (file) => {\n    const context = this;\n    const data = new FormData();\n    const fileInput = document.querySelector('#file_upload');\n\n    data.append('file', fileInput.files[0]);\n\n    fetch(`http://localhost:3030/upload`, {\n      method: 'POST',\n      body: data\n    })\n    .then(res => {\n      const newFile = {\n        name: file.name,\n        modified: new Date(),\n        size: file.size\n      };\n      console.log(newFile)\n      this.setState({\n        files: context.state.files.concat(newFile)\n      }, () => {\n        context.setState({\n          loading: false,\n          showUpload: false,\n          done: {\n            type: 'success',\n            msg: 'File uploaded successfully.'\n          }\n        });\n      });\n    })\n    .catch(err => {\n      context.setState({\n        loading: false,\n        showUpload: false,\n        done: {\n          type: 'danger',\n          msg: 'Could not upload file. Make sure it is under 1GB.'\n        }\n      });\n    });\n  };\n\n  handleUploadDone = () => {\n    this.setState({\n      showUpload: false\n    });\n  };\n\n  closeNotification = () => {\n    this.setState({\n      done: null\n    });\n  };\n\n  handleCloseDeleteModal = () => {\n    this.setState({ show: false });\n  };\n\n  handleOpenDeleteModal = (name) => {\n    this.setState({ show: true, selectedFile: name });\n  };\n\n  handleConfirmDelete = () => {\n    const context = this;\n\n    fetch(`http://localhost:3030/file`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ fileName: this.state.selectedFile })\n    })\n    .then(res => {\n      context.setState({\n        files: context.state.files.filter(file => file.name !== context.state.selectedFile)\n      }, () => {\n        context.setState({\n          done: {\n            type: 'success',\n            msg: 'File successfully deleted.'\n          },\n          show: false,\n          selectedFile: null\n        });\n      });\n    })\n    .catch(err => {\n      context.setState({\n        done: {\n          type: 'danger',\n          msg: 'Could not delete the selected file.'\n        },\n        show: false,\n        selectedFile: null\n      });\n    });\n  };\n\n  render() { \n    return (\n      <div className=\"columns is-centered\">\n        <div className={`modal ${this.state.showUpload ? \"is-active\" : \"\"}`}>\n          <div className=\"modal-background\">\n            <div id=\"centered-modal\" className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                File Upload\n              </header>\n              <section className=\"modal-card-body\">\n                <FileForm \n                  handleUpload={this.handleUpload}\n                  loading={this.state.loading}\n                />\n              </section>\n            </div>\n            <button\n              className=\"modal-close is-large\"\n              onClick={this.handleUploadDone}\n            ></button>\n          </div>\n        </div>\n        <div className={`modal ${this.state.show ? \"is-active\" : \"\"}`}>\n          <div className=\"modal-background\">\n            <div id=\"centered-modal\" className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                Delete File\n              </header>\n              <section className=\"modal-card-body\">\n                <p className=\"subtitle\">Are you sure you want to delete this file? This action is irreversible.</p>\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button \n                  className=\"button is-danger\" \n                  onClick={this.handleConfirmDelete}\n                >Delete File</button>\n                <button \n                  className=\"button\" \n                  onClick={this.handleCloseDeleteModal}\n                >\n                  Cancel\n                </button>\n              </footer>\n            </div>\n            <button\n              className=\"modal-close is-large\"\n              onClick={this.handleCloseDeleteModal}\n            ></button>\n          </div>\n        </div>\n        <div className=\"column is-three-quarters has-text-left\">\n          <h1 className=\"title is-2\">Static File Manager</h1>\n          <div className=\"box\">\n            <button\n              className=\"button is-fullwidth is-info\"\n              onClick={this.handleUploadClick}\n            >\n              Upload File\n            </button>\n            {this.state.done && (\n              <div className={`mt-3 notification is-${this.state.done.type}`}>\n                <button className=\"delete\" onClick={this.closeNotification}></button>\n                {this.state.done.msg}\n              </div>\n            )}\n          </div>\n          <div className=\"box\">\n            <table className=\"table is-fullwidth\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Size</th>\n                  <th>Last Modified</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  this.state.files.map(function(file) {\n                    return (\n                      <tr>\n                        <td>{file.name}</td>\n                        <td>{this.getSize(file.size)}</td>\n                        <td>{new Date(file.modified).toDateString()}</td>\n                        <td>\n                          <span \n                            className=\"icon delete-backend ml-2\"\n                            onClick={() => this.handleOpenDeleteModal(file.name)}\n                          >\n                            <i \n                              className=\"fas fa-trash-alt\"\n                            ></i>\n                          </span>\n                        </td>\n                      </tr>\n                    );\n                  }, this)\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default StaticManager;","/home/jordan/github/satellite/real-client/src/FileForm.js",[],"/home/jordan/github/satellite/real-client/src/PublicRoute.js",[],"/home/jordan/github/satellite/real-client/src/ProtectedRoute.js",[],"/home/jordan/github/satellite/real-client/src/Dashboard.js",[],{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"201","line":6,"column":3,"nodeType":"199","messageId":"200","endLine":6,"endColumn":7},{"ruleId":"197","severity":1,"message":"202","line":22,"column":7,"nodeType":"199","messageId":"200","endLine":22,"endColumn":11},{"ruleId":"197","severity":1,"message":"203","line":33,"column":7,"nodeType":"199","messageId":"200","endLine":33,"endColumn":13},{"ruleId":"197","severity":1,"message":"204","line":2,"column":16,"nodeType":"199","messageId":"200","endLine":2,"endColumn":22},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"205","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":16},{"ruleId":"197","severity":1,"message":"206","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":14},{"ruleId":"197","severity":1,"message":"207","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":16},{"ruleId":"197","severity":1,"message":"208","line":6,"column":10,"nodeType":"199","messageId":"200","endLine":6,"endColumn":13},{"ruleId":"197","severity":1,"message":"209","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":21},{"ruleId":"197","severity":1,"message":"210","line":10,"column":10,"nodeType":"199","messageId":"200","endLine":10,"endColumn":18},{"ruleId":"197","severity":1,"message":"211","line":10,"column":20,"nodeType":"199","messageId":"200","endLine":10,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"205","line":9,"column":8,"nodeType":"199","messageId":"200","endLine":9,"endColumn":14},{"ruleId":"197","severity":1,"message":"212","line":10,"column":8,"nodeType":"199","messageId":"200","endLine":10,"endColumn":14},{"ruleId":"197","severity":1,"message":"213","line":11,"column":8,"nodeType":"199","messageId":"200","endLine":11,"endColumn":12},{"ruleId":"197","severity":1,"message":"202","line":22,"column":7,"nodeType":"199","messageId":"200","endLine":22,"endColumn":11},{"ruleId":"197","severity":1,"message":"203","line":33,"column":7,"nodeType":"199","messageId":"200","endLine":33,"endColumn":13},{"ruleId":"197","severity":1,"message":"214","line":34,"column":7,"nodeType":"199","messageId":"200","endLine":34,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":123,"column":30,"nodeType":"217","messageId":"218","endLine":123,"endColumn":32},{"ruleId":"197","severity":1,"message":"210","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":18},{"ruleId":"197","severity":1,"message":"211","line":7,"column":20,"nodeType":"199","messageId":"200","endLine":7,"endColumn":31},{"ruleId":"197","severity":1,"message":"219","line":8,"column":10,"nodeType":"199","messageId":"200","endLine":8,"endColumn":20},{"ruleId":"197","severity":1,"message":"220","line":21,"column":9,"nodeType":"199","messageId":"200","endLine":21,"endColumn":21},{"ruleId":"197","severity":1,"message":"221","line":33,"column":9,"nodeType":"199","messageId":"200","endLine":33,"endColumn":25},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"222","line":54,"column":11,"nodeType":"199","messageId":"200","endLine":54,"endColumn":19},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"197","severity":1,"message":"204","line":2,"column":16,"nodeType":"199","messageId":"200","endLine":2,"endColumn":22},{"ruleId":"197","severity":1,"message":"227","line":22,"column":9,"nodeType":"199","messageId":"200","endLine":22,"endColumn":25},{"ruleId":"197","severity":1,"message":"228","line":26,"column":9,"nodeType":"199","messageId":"200","endLine":26,"endColumn":26},{"ruleId":"223","replacedBy":"229"},{"ruleId":"225","replacedBy":"230"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"223","replacedBy":"231"},{"ruleId":"225","replacedBy":"232"},{"ruleId":"197","severity":1,"message":"233","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":23},{"ruleId":"223","replacedBy":"234"},{"ruleId":"225","replacedBy":"235"},{"ruleId":"223","replacedBy":"236"},{"ruleId":"225","replacedBy":"237"},{"ruleId":"197","severity":1,"message":"238","line":39,"column":11,"nodeType":"199","messageId":"200","endLine":39,"endColumn":16},{"ruleId":"223","replacedBy":"239"},{"ruleId":"225","replacedBy":"240"},{"ruleId":"197","severity":1,"message":"241","line":3,"column":8,"nodeType":"199","messageId":"200","endLine":3,"endColumn":20},{"ruleId":"197","severity":1,"message":"241","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":20},{"ruleId":"197","severity":1,"message":"242","line":4,"column":22,"nodeType":"199","messageId":"200","endLine":4,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"243","line":4,"column":7,"nodeType":"199","messageId":"200","endLine":4,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'keys' is assigned a value but never used.","'schema' is assigned a value but never used.","'uuidv4' is defined but never used.","'Navbar' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Nav' is defined but never used.","'FormControl' is defined but never used.","'shownKey' is assigned a value but never used.","'setShownKey' is assigned a value but never used.","'Header' is defined but never used.","'Main' is defined but never used.","'satellites' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'showDelete' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'handleCloseModal' is assigned a value but never used.","'mutation' is assigned a value but never used.","no-native-reassign",["244"],"no-negated-in-lhs",["245"],"'handleCheckAdmin' is assigned a value but never used.","'handleCheckClient' is assigned a value but never used.",["244"],["245"],["244"],["245"],"'AddApiKeyButton' is defined but never used.",["244"],["245"],["244"],["245"],"'query' is assigned a value but never used.",["244"],["245"],"'Notification' is defined but never used.","'setShowDelete' is assigned a value but never used.","'condenseName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]