[{"/home/jordan/github/satellite/client-ui/src/App.js":"1","/home/jordan/github/satellite/client-ui/src/AddApiKeyButton.js":"2","/home/jordan/github/satellite/client-ui/src/Navbar.js":"3","/home/jordan/github/satellite/client-ui/src/reportWebVitals.js":"4","/home/jordan/github/satellite/client-ui/src/ApiKeyTable.js":"5","/home/jordan/github/satellite/client-ui/src/ApiManager.js":"6","/home/jordan/github/satellite/client-ui/src/Header.js":"7","/home/jordan/github/satellite/client-ui/src/SchemaManager.js":"8","/home/jordan/github/satellite/client-ui/src/index.js":"9","/home/jordan/github/satellite/client-ui/src/SchemaExplorer.js":"10","/home/jordan/github/satellite/real-client/src/App.js":"11","/home/jordan/github/satellite/real-client/src/Header.js":"12","/home/jordan/github/satellite/real-client/src/ApiKeyTable.js":"13","/home/jordan/github/satellite/real-client/src/SchemaManager.js":"14","/home/jordan/github/satellite/real-client/src/AddApiKeyButton.js":"15","/home/jordan/github/satellite/real-client/src/Navbar.js":"16","/home/jordan/github/satellite/real-client/src/ApiManager.js":"17","/home/jordan/github/satellite/real-client/src/Main.js":"18","/home/jordan/github/satellite/real-client/src/index.js":"19","/home/jordan/github/satellite/real-client/src/SchemaExplorer.js":"20","/home/jordan/github/satellite/real-client/src/reportWebVitals.js":"21","/home/jordan/github/satellite/real-client/src/Home.js":"22","/home/jordan/github/satellite/real-client/src/Authentication.js":"23","/home/jordan/github/satellite/real-client/src/Login.js":"24","/home/jordan/github/satellite/real-client/src/Register.js":"25","/home/jordan/github/satellite/real-client/src/Notification.js":"26","/home/jordan/github/satellite/real-client/src/StaticMananger.js":"27","/home/jordan/github/satellite/real-client/src/FileForm.js":"28"},{"size":1323,"mtime":1606759232960,"results":"29","hashOfConfig":"30"},{"size":2220,"mtime":1606328589442,"results":"31","hashOfConfig":"30"},{"size":551,"mtime":1606747869592,"results":"32","hashOfConfig":"30"},{"size":362,"mtime":1606314438209,"results":"33","hashOfConfig":"30"},{"size":2994,"mtime":1606745530562,"results":"34","hashOfConfig":"30"},{"size":1194,"mtime":1606747731187,"results":"35","hashOfConfig":"30"},{"size":208,"mtime":1606747943587,"results":"36","hashOfConfig":"30"},{"size":2177,"mtime":1606764507797,"results":"37","hashOfConfig":"30"},{"size":500,"mtime":1606314438209,"results":"38","hashOfConfig":"30"},{"size":532,"mtime":1606755906177,"results":"39","hashOfConfig":"30"},{"size":5674,"mtime":1607349427365,"results":"40","hashOfConfig":"41"},{"size":5302,"mtime":1607117052081,"results":"42","hashOfConfig":"41"},{"size":2223,"mtime":1606833174973,"results":"43","hashOfConfig":"41"},{"size":3560,"mtime":1607349683011,"results":"44","hashOfConfig":"41"},{"size":1872,"mtime":1606850368944,"results":"45","hashOfConfig":"41"},{"size":728,"mtime":1607008785799,"results":"46","hashOfConfig":"41"},{"size":1207,"mtime":1606833006265,"results":"47","hashOfConfig":"41"},{"size":1143,"mtime":1607348205251,"results":"48","hashOfConfig":"41"},{"size":500,"mtime":1606314438209,"results":"49","hashOfConfig":"41"},{"size":578,"mtime":1607107706068,"results":"50","hashOfConfig":"41"},{"size":362,"mtime":1606314438209,"results":"51","hashOfConfig":"41"},{"size":10506,"mtime":1607349298440,"results":"52","hashOfConfig":"41"},{"size":1629,"mtime":1606920437335,"results":"53","hashOfConfig":"41"},{"size":2112,"mtime":1606920828862,"results":"54","hashOfConfig":"41"},{"size":3267,"mtime":1606920737821,"results":"55","hashOfConfig":"41"},{"size":555,"mtime":1606918852324,"results":"56","hashOfConfig":"41"},{"size":7374,"mtime":1607113671754,"results":"57","hashOfConfig":"41"},{"size":1517,"mtime":1607106661647,"results":"58","hashOfConfig":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6g18n6",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18yp9pv",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jordan/github/satellite/client-ui/src/App.js",["132","133","134","135"],"/home/jordan/github/satellite/client-ui/src/AddApiKeyButton.js",["136"],"import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst AddApiKeyButton = ({ addKey }) => {\n  const [show, setShow] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const handleOpenModal = (e) => {\n    setShow(true);\n  };\n\n  const handleCloseModal = (e) => {\n    setShow(false);\n  };\n\n  const handleAdd = (e) => {\n    setShow(false);\n    addKey(isAdmin);\n    setIsAdmin(false);\n  };\n\n  const handleCheckAdmin = (e) => {\n    setIsAdmin(true);\n  };\n\n  const handleCheckClient = (e) => {\n    setIsAdmin(false);\n  };\n\n  return (\n    <div className=\"content\">\n      <button\n        className=\"button is-medium\"\n        onClick={handleOpenModal}\n      >\n        New API Key\n      </button>\n      <Modal \n        show={show} \n        onHide={handleCloseModal}\n      >\n        <Modal.Header \n          closeButton\n        >\n          <Modal.Title>Create API Key</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"field\">\n            <label className=\"label\">Name</label>\n            <div className=\"control\">\n              <label className=\"radio\">\n                <input \n                  type=\"radio\" \n                  name=\"permissions\" \n                  checked={isAdmin}\n                  onChange={handleCheckAdmin}\n                />\n                Admin\n              </label>\n              <label className=\"radio\">\n                <input \n                  type=\"radio\" \n                  name=\"permissions\" \n                  checked={!isAdmin}\n                  onChange={handleCheckClient}\n                />\n                Client\n              </label>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            className=\"button\"\n            variant=\"secondary\"\n            onClick={handleCloseModal}\n          >\n            Close\n          </Button>\n          <Button\n            className=\"button is-primary\"\n            variant=\"primary\"\n            onClick={handleAdd}\n          >\n            Create API Key\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddApiKeyButton;","/home/jordan/github/satellite/client-ui/src/Navbar.js",["137","138","139","140","141","142"],"/home/jordan/github/satellite/client-ui/src/reportWebVitals.js",[],"/home/jordan/github/satellite/client-ui/src/ApiKeyTable.js",["143","144"],"import React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, Button } from 'react-bootstrap';\n\nimport './ApiKeyTable.css';\n\nconst ApiKeyTable = ({ keys, deleteKey }) => {\n  const [shownKey, setShownKey] = useState(null);\n  const [showDelete, setShowDelete ] = useState(false);\n  const [keyToDelete, setKeyToDelete] = useState(null);\n\n  const handleCopyKey = (id) => {\n    const key = keys.filter(key => key.id === id)[0];\n\n    navigator.clipboard.writeText(key.key).then(() => {\n      return true;\n    }, () => {\n      return null;\n    });\n  };\n\n  const handleDelete = () => {\n    setShowDelete(false);\n    deleteKey(keyToDelete);\n  };\n\n  const handleOpenModal = (id) => {\n    if (keys.length === 1) return null;\n\n    setShowDelete(true);\n    setKeyToDelete(id)\n  };\n\n  const handleCloseModal = (e) => {\n    setShowDelete(false);\n  };\n\n  return (\n    <div>\n      <Modal \n        show={showDelete} \n        onHide={handleCloseModal}\n      >\n        <Modal.Header \n          closeButton\n        >\n          <Modal.Title>Delete API Key</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Are you sure you'd like to delete this API key? This action is irreversible.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            className=\"button\"\n            variant=\"secondary\"\n            onClick={handleCloseModal}\n          >\n            Close\n          </Button>\n          <Button\n            className=\"button is-primary\"\n            variant=\"primary\"\n            onClick={handleDelete}\n          >\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Table hover bordered striped>\n        <thead>\n          <tr>\n            <th>Key</th>\n            <th>Permissions</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {keys.map(function(key, i) {\n            return (\n              <tr key={i}>\n                <td\n                  id={key.id}\n                  onClick={() => handleCopyKey(key.id)}\n                >\n                  { key.admin ? \"*\".repeat(key.key.length) : key.key }\n                </td>\n                <td>{key.admin ? \"Admin\" : \"Client\"}</td>\n                <td>\n                  <span>\n                    <FontAwesomeIcon \n                      icon={faCopy} \n                      onClick={() => handleCopyKey(key.id)} \n                      className=\"action-icon\"\n                    />\n                    <FontAwesomeIcon \n                      icon={faTrashAlt} \n                      onClick={() => handleOpenModal(key.id)}\n                      className=\"action-icon\"\n                    />\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ApiKeyTable;","/home/jordan/github/satellite/client-ui/src/ApiManager.js",[],"/home/jordan/github/satellite/client-ui/src/Header.js",["145"],"/home/jordan/github/satellite/client-ui/src/SchemaManager.js",["146"],"/home/jordan/github/satellite/client-ui/src/index.js",[],"/home/jordan/github/satellite/client-ui/src/SchemaExplorer.js",[],"/home/jordan/github/satellite/real-client/src/App.js",["147","148","149"],"/home/jordan/github/satellite/real-client/src/Header.js",[],"/home/jordan/github/satellite/real-client/src/ApiKeyTable.js",["150","151","152","153","154"],"import React, { useState } from 'react';\nimport AddApiKeyButton from './AddApiKeyButton';\n\nimport './ApiKeyTable.css';\n\nconst ApiKeyTable = ({ keys, deleteKey, addKey }) => {\n  const [shownKey, setShownKey] = useState(null);\n  const [showDelete, setShowDelete ] = useState(false);\n  const [keyToDelete, setKeyToDelete] = useState(null);\n\n  const handleCopyKey = (id) => {\n    const key = keys.filter(key => key.id === id)[0];\n\n    navigator.clipboard.writeText(key.key).then(() => {\n      return true;\n    }, () => {\n      return null;\n    });\n  };\n\n  const handleDelete = () => {\n    setShowDelete(false);\n    deleteKey(keyToDelete);\n  };\n\n  const handleOpenModal = (id) => {\n    if (keys.length === 1) return null;\n\n    setShowDelete(true);\n    setKeyToDelete(id)\n  };\n\n  const handleCloseModal = (e) => {\n    setShowDelete(false);\n  };\n\n  return (\n    <div className=\"box\" style={{ padding: \"2rem\" }}>\n      <table className=\"table is-fullwidth\">\n        <thead>\n          <tr>\n            <th>Key</th>\n            <th>Permissions</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {keys.map(function(key, i) {\n            return (\n              <tr key={i}>\n                <td\n                  id={key.id}\n                  onClick={() => handleCopyKey(key.id)}\n                >\n                  { key.admin ? \"*\".repeat(key.key.length) : key.key }\n                </td>\n                <td>{key.admin ? \"Admin\" : \"Client\"}</td>\n                <td>\n                  <span \n                    className=\"icon toggle\" \n                    onClick={() => handleCopyKey(key.id)}\n                  >\n                    <i className=\"fas fa-copy\"></i>\n                  </span> \n                  |\n                  <span \n                    className=\"icon delete-backend\"\n                    onClick={() => handleOpenModal(key.id)}\n                  >\n                    <i \n                      className=\"fas fa-trash-alt\"\n                    ></i>\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <AddApiKeyButton addKey={addKey} />\n    </div>\n  );\n};\n\nexport default ApiKeyTable;","/home/jordan/github/satellite/real-client/src/SchemaManager.js",["155","156"],"import React, { useState } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/lint/lint';\nimport 'codemirror-graphql/hint';\nimport 'codemirror-graphql/lint';\nimport 'codemirror-graphql/mode';\n\nclass SchemaManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      schema: '# Loading schema...',\n      notification: null\n    };\n  }\n\n  componentDidMount() {\n    // retrieve actual schema from Dgraph\n    const context = this;\n    const query = `\n      {\n        getGQLSchema {\n          schema\n        }\n      }\n    `;\n\n    fetch(`http://localhost:3030/admin`, {\n      method: 'POST',\n      headers: { \n       'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ query })\n    })\n    .then(res => res.json())\n    .then(json => {\n      setTimeout(() => {\n        context.handleUpdateSchema(json.data.getGQLSchema.schema);\n      }, 1000);\n    })\n    .catch(err => {\n      context.handleUpdateSchema('# Could not load schema from backend.');\n    });\n  }\n\n  handleUpdateSchema = (schema) => {\n    this.setState({ schema });\n  };\n\n  handleSubmitSchema = () => {\n    const context = this;\n    const mutation = `\n    {\n      updateGQLSchema(\n        input: { set: { schema: \"${this.state.schema}\"}}\n      ) {\n        gqlSchema {\n          schema\n          generatedSchema\n        }\n      }\n    }\n    `;\n\n    this.setState({\n      notification: {\n        type: 'light',\n        msg: 'Updating schema...'\n      }\n    });\n\n    fetch(`http://localhost:3030/admin/schema`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-binary'\n      },\n      body: this.state.schema\n    })\n    .then(res => {\n      console.log(res);\n      return res.json();\n    })\n    .then(json => {\n      if (json.errors) {\n        this.setState({\n          notification: {\n            type: 'danger',\n            msg: 'There is an issue with the schema. Could not update.'\n          }\n        });\n      \n        return;\n      } \n\n      this.setState({ notification: {\n        type: 'success',\n        msg: 'Schema successfully updated.'\n      }});\n    })\n    .catch(err => {\n      this.handleUpdateSchema('# Could not update schema.');\n      context.setState({ \n        notification: {\n          type: 'danger',\n          msg: 'Could not update schema due to connection error.'\n        }\n      });\n    });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ notification: null });\n  };\n\n  render() {\n    return (\n      <div \n        style={{ textAlign: 'left' }}\n      >\n        <h1 className=\"title is-2\">Schema</h1>\n        {this.state.notification &&         \n          <div className={`mb-3 notification is-${this.state.notification.type}`}>\n            <button className=\"delete\" onClick={this.handleCloseDelete}></button>\n            {this.state.notification.msg}\n          </div>\n        }\n        <div className=\"box\" style={{ padding: \"2rem\" }}>\n          <CodeMirror \n            value={this.state.schema}\n            options={{\n              mode: 'graphql',\n              theme: 'material',\n              lineNumbers: true,\n              tabSize: 2\n            }}\n            onChange={(editor, data, value) => this.handleUpdateSchema(value)}\n          />\n          <button\n            className=\"button is-info is-fullwidth mt-2\"\n            onClick={this.handleSubmitSchema}\n          >\n            Deploy\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SchemaManager;","/home/jordan/github/satellite/real-client/src/AddApiKeyButton.js",["157","158","159"],"import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddApiKeyButton = ({ addKey }) => {\n  const [show, setShow] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const handleOpenModal = (e) => {\n    setShow(true);\n  };\n\n  const handleCloseModal = (e) => {\n    setShow(false);\n  };\n\n  const handleAdd = (e) => {\n    setShow(false);\n    addKey(isAdmin);\n    setIsAdmin(false);\n  };\n\n  const handleCheckAdmin = (e) => {\n    setIsAdmin(true);\n  };\n\n  const handleCheckClient = (e) => {\n    setIsAdmin(false);\n  };\n\n  return (\n    <div>\n      <button\n        className=\"button is-fullwidth is-info mt-5\"\n        onClick={handleOpenModal}\n      >\n        New API Key\n      </button>\n      <div className={`modal ${show ? \"is-active\" : \"\"}`}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            New API Key\n          </header>\n          <section className=\"modal-card-body\">\n            <p></p>\n            <div className=\"control\">\n              <label className=\"radio\">\n                <input type=\"radio\" name=\"permissions\" checked={isAdmin}/>\n                Admin\n              </label>\n              <label className=\"radio\">\n                <input type=\"radio\" name=\"permissions\" checked={!isAdmin} />\n                Client\n              </label>\n            </div>\n          </section>\n          <footer className=\"modal-card-foot\">\n            <button className=\"button is-info\" onClick={handleAdd}>Create API Key</button>\n            <button className=\"button\" onClick={handleCloseModal}>Cancel</button>\n          </footer>\n        </div>\n        <button \n          className=\"modal-close is-large\" \n          onClick={handleCloseModal}\n        ></button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddApiKeyButton;",["160","161"],"/home/jordan/github/satellite/real-client/src/Navbar.js",["162"],"/home/jordan/github/satellite/real-client/src/ApiManager.js",["163"],"import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport AddApiKeyButton from './AddApiKeyButton';\nimport ApiKeyTable from './ApiKeyTable';\n\nconst initialState = [{\n  id: 1,\n  key: uuidv4(),\n  admin: true\n}, {\n  id: 2,\n  key: uuidv4(),\n  admin: false\n}, {\n  id: 3,\n  key: uuidv4(),\n  admin: true\n}];\n\nconst sorter = (keys) => {\n  return keys.slice(0).sort((f, s) => s.admin - f.admin);\n};\n\nconst ApiManager = () => {\n  const [keys, setKeys] = useState([]);\n\n  useEffect(() => {\n    // fetch API to get keys\n    setKeys(sorter(initialState));\n  }, []);\n  \n  const addKey = (isAdmin) => {\n    // generate uuid for key\n    // add to database\n    // add in state\n\n    const newKey = {\n      key: uuidv4(),\n      admin: isAdmin\n    };\n\n    setKeys(sorter(keys.concat(newKey)));\n  };\n\n  const deleteKey = (id) => {\n    const newKeys = keys.filter(key => key.id !== id);\n\n    // make API call to delete\n    \n    setKeys(newKeys);\n  };\n\n  return (\n    <div>\n      <h1 className=\"title is-2 has-text-left\">API Key Manager</h1>\n      <ApiKeyTable \n        keys={keys}\n        deleteKey={deleteKey}\n        addKey={addKey}\n      />\n    </div>\n  );\n};\n\nexport default ApiManager;",["164","165"],"/home/jordan/github/satellite/real-client/src/Main.js",[],"/home/jordan/github/satellite/real-client/src/index.js",[],["166","167"],"/home/jordan/github/satellite/real-client/src/SchemaExplorer.js",[],["168","169"],"/home/jordan/github/satellite/real-client/src/reportWebVitals.js",[],["170","171"],"/home/jordan/github/satellite/real-client/src/Home.js",["172"],"/home/jordan/github/satellite/real-client/src/Authentication.js",[],"/home/jordan/github/satellite/real-client/src/Login.js",["173","174","175","176"],"import React, { useState } from 'react';\nimport Notification from './Notification';\n\nconst Login = ({ handleUserId, handleChooseRegister, handleUpdateMessage }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    // make fetch to controller to determine authenticity\n    const payload = {\n      username,\n      password\n    };\n\n    // if good, setUserId\n    const user = {\n      id: 1,\n      username\n    };\n\n    handleUserId(1); // automatically rerenders router\n    \n    // if bad, render error\n\n    // handleUpdateMessage('Incorrect credentials.', false);\n  };\n\n  return (\n    <>\n      <div className=\"field\">\n        <label className=\"label\">Username</label>\n        <div className=\"control has-icons-left\">\n          <input \n            className=\"input\" \n            value={username}\n            onChange={handleUsernameChange}\n            type=\"text\"\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\"></i>\n          </span>\n        </div>\n\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Password</label>\n        <div className=\"control has-icons-left\">\n          <input \n              className=\"input\" \n              value={password}\n              onChange={handlePasswordChange}\n              type=\"password\"\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-key\"></i>\n            </span>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <button \n            className=\"button is-info\" \n            onClick={handleSubmit}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n      <a \n        href=\"#\"\n        onClick={handleChooseRegister}\n      >\n        Don't have an account? Register instead.\n      </a>\n    </>\n  );\n};\n\nexport default Login;","/home/jordan/github/satellite/real-client/src/Register.js",["177","178","179"],"import React, { useState } from 'react';\nimport Notification from './Notification';\n\nconst Register = ({ handleChooseLogin, handleUpdateMessage }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handlePWConfirmationChange = (e) => {\n    setPasswordConfirmation(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    // check params for validity\n    if (password.trim().length < password.length || username.trim().length < username.length) {\n      handleUpdateMessage('Credentials can not contain spaces.', false);\n      return;\n    }\n\n    if (password !== passwordConfirmation) {\n      handleUpdateMessage('Passwords do not match.', false);\n      return;\n    }\n\n    if (password.length < 8) {\n      handleUpdateMessage('Password must be at least 8 characters.', false);\n      return; \n    }\n\n    // make fetch to controller to determine authenticity\n    const payload = {\n      username,\n      password,\n      passwordConfirmation\n    };\n\n    // if good, go to Login and set success notification\n    handleUpdateMessage('Successfully registered.', true);\n    handleChooseLogin();\n    \n\n    // if bad, render error\n    \n    // handleUpdateMessage('Unable to register.', false);\n  };\n\n  return (\n    <>\n      <div className=\"field\">\n        <label className=\"label\">Username</label>\n        <div className=\"control has-icons-left\">\n          <input \n            className=\"input\" \n            value={username}\n            onChange={handleUsernameChange}\n            type=\"text\"\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\"></i>\n          </span>\n        </div>\n\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Password</label>\n        <div className=\"control has-icons-left\">\n          <input \n              className=\"input\" \n              value={password}\n              onChange={handlePasswordChange}\n              type=\"password\"\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-key\"></i>\n            </span>\n        </div>\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Password Confirmation</label>\n        <div className=\"control has-icons-left\">\n          <input \n              className=\"input\" \n              value={passwordConfirmation}\n              onChange={handlePWConfirmationChange}\n              type=\"password\"\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-key\"></i>\n            </span>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <button \n            className=\"button is-info\" \n            onClick={handleSubmit}\n          >\n            Register\n          </button>\n        </div>\n      </div>\n      <a \n        href=\"#\"\n        onClick={handleChooseLogin}\n      >\n        Already have an account? Login instead.\n      </a>    \n    </>\n  );\n};\n\nexport default Register;",["180","181"],"/home/jordan/github/satellite/real-client/src/Notification.js",["182"],"import React, { useState } from 'react';\n\nconst Notification = ({ message, success, removeNotification }) => {\n  const [showDelete, setShowDelete] = useState(true);\n\n  const handleDeleteClose = () => {\n    removeNotification();\n  };\n\n  return (\n    <div className={`notification ${success ? 'is-success' : 'is-danger'}`}>\n      { showDelete ? (\n        <button \n          className=\"delete\"\n          onClick={handleDeleteClose}\n        >\n        </button>\n      ) : (\n        null\n      )}\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;",["183","184"],"/home/jordan/github/satellite/real-client/src/StaticMananger.js",["185","186"],"import React, { useState } from 'react';\nimport FileForm from './FileForm';\n\nconst condenseName = (name) => {\n  return name.split(' ').join('_').toLowerCase();\n};\n\nclass StaticManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n      showUpload: false,\n      loading: false,\n      done: false,\n      files: [],\n      selectedFile: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3030/files`)\n    .then(res => { \n      return res.json();\n    })\n    .then(json => {\n      this.setState({\n        files: json\n      });\n    })\n    .catch(err => {\n      this.setState({\n        done: {\n          type: 'danger',\n          msg: 'Could not fetch files. Contact an administrator.'\n        }\n      });\n    });\n  }\n\n  handleOpenModal = (name) => {\n    this.setState({\n      selectedFile: name\n    });\n  };\n\n  getSize = (size) => {\n    let updatedSize;\n\n    if (size < 1000) {\n      return `< 1KB`;\n    } else if (size > 1000000000) { \n      updatedSize = Math.round(size / 1000000000 * 10) / 10;\n      return `${updatedSize}GB`\n    } else if (size > 1000000) {\n      updatedSize = Math.round(size / 1000000 * 10) / 10;\n      return `${updatedSize}MB`;\n    } else {\n      return `${Math.round(size / 1000 * 10) / 10}KB`;\n    }\n  };\n\n  handleUploadClick = () => {\n    this.setState({\n      showUpload: true\n    });\n\n\n  };\n\n  handleUpload = (file) => {\n    const context = this;\n    const data = new FormData();\n    const fileInput = document.querySelector('#file_upload');\n\n    data.append('file', fileInput.files[0]);\n\n    fetch(`http://localhost:3030/upload`, {\n      method: 'POST',\n      body: data\n    })\n    .then(res => {\n      const newFile = {\n        name: file.name,\n        modified: new Date(),\n        size: file.size\n      };\n      console.log(newFile)\n      this.setState({\n        files: context.state.files.concat(newFile)\n      }, () => {\n        context.setState({\n          loading: false,\n          showUpload: false,\n          done: {\n            type: 'success',\n            msg: 'File uploaded successfully.'\n          }\n        });\n      });\n    })\n    .catch(err => {\n      context.setState({\n        loading: false,\n        showUpload: false,\n        done: {\n          type: 'danger',\n          msg: 'Could not upload file. Make sure it is under 1GB.'\n        }\n      });\n    });\n  };\n\n  handleUploadDone = () => {\n    this.setState({\n      showUpload: false\n    });\n  };\n\n  closeNotification = () => {\n    this.setState({\n      done: null\n    });\n  };\n\n  handleCloseDeleteModal = () => {\n    this.setState({ show: false });\n  };\n\n  handleOpenDeleteModal = (name) => {\n    this.setState({ show: true, selectedFile: name });\n  };\n\n  handleConfirmDelete = () => {\n    const context = this;\n\n    fetch(`http://localhost:3030/file`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ fileName: this.state.selectedFile })\n    })\n    .then(res => {\n      context.setState({\n        files: context.state.files.filter(file => file.name !== context.state.selectedFile)\n      }, () => {\n        context.setState({\n          done: {\n            type: 'success',\n            msg: 'File successfully deleted.'\n          },\n          show: false,\n          selectedFile: null\n        });\n      });\n    })\n    .catch(err => {\n      context.setState({\n        done: {\n          type: 'danger',\n          msg: 'Could not delete the selected file.'\n        },\n        show: false,\n        selectedFile: null\n      });\n    });\n  };\n\n  render() { \n    return (\n      <div className=\"columns is-centered\">\n        <div className={`modal ${this.state.showUpload ? \"is-active\" : \"\"}`}>\n          <div className=\"modal-background\">\n            <div id=\"centered-modal\" className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                File Upload\n              </header>\n              <section className=\"modal-card-body\">\n                <FileForm \n                  handleUpload={this.handleUpload}\n                  loading={this.state.loading}\n                />\n              </section>\n            </div>\n            <button\n              className=\"modal-close is-large\"\n              onClick={this.handleUploadDone}\n            ></button>\n          </div>\n        </div>\n        <div className={`modal ${this.state.show ? \"is-active\" : \"\"}`}>\n          <div className=\"modal-background\">\n            <div id=\"centered-modal\" className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                Delete File\n              </header>\n              <section className=\"modal-card-body\">\n                <p className=\"subtitle\">Are you sure you want to delete this file? This action is irreversible.</p>\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button \n                  className=\"button is-danger\" \n                  onClick={this.handleConfirmDelete}\n                >Delete File</button>\n                <button \n                  className=\"button\" \n                  onClick={this.handleCloseDeleteModal}\n                >\n                  Cancel\n                </button>\n              </footer>\n            </div>\n            <button\n              className=\"modal-close is-large\"\n              onClick={this.handleCloseDeleteModal}\n            ></button>\n          </div>\n        </div>\n        <div className=\"column is-three-quarters has-text-left\">\n          <h1 className=\"title is-2\">Static File Manager</h1>\n          <div className=\"box\">\n            <button\n              className=\"button is-fullwidth is-info\"\n              onClick={this.handleUploadClick}\n            >\n              Upload File\n            </button>\n            {this.state.done && (\n              <div className={`mt-3 notification is-${this.state.done.type}`}>\n                <button className=\"delete\" onClick={this.closeNotification}></button>\n                {this.state.done.msg}\n              </div>\n            )}\n          </div>\n          <div className=\"box\">\n            <table className=\"table is-fullwidth\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Size</th>\n                  <th>Last Modified</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  this.state.files.map(function(file) {\n                    return (\n                      <tr>\n                        <td>{file.name}</td>\n                        <td>{this.getSize(file.size)}</td>\n                        <td>{new Date(file.modified).toDateString()}</td>\n                        <td>\n                          <span \n                            className=\"icon delete-backend ml-2\"\n                            onClick={() => this.handleOpenDeleteModal(file.name)}\n                          >\n                            <i \n                              className=\"fas fa-trash-alt\"\n                            ></i>\n                          </span>\n                        </td>\n                      </tr>\n                    );\n                  }, this)\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default StaticManager;","/home/jordan/github/satellite/real-client/src/FileForm.js",[],{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"191","line":6,"column":3,"nodeType":"189","messageId":"190","endLine":6,"endColumn":7},{"ruleId":"187","severity":1,"message":"192","line":22,"column":7,"nodeType":"189","messageId":"190","endLine":22,"endColumn":11},{"ruleId":"187","severity":1,"message":"193","line":33,"column":7,"nodeType":"189","messageId":"190","endLine":33,"endColumn":13},{"ruleId":"187","severity":1,"message":"194","line":2,"column":16,"nodeType":"189","messageId":"190","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"195","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":16},{"ruleId":"187","severity":1,"message":"196","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":14},{"ruleId":"187","severity":1,"message":"197","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"198","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":13},{"ruleId":"187","severity":1,"message":"199","line":7,"column":10,"nodeType":"189","messageId":"190","endLine":7,"endColumn":21},{"ruleId":"187","severity":1,"message":"200","line":10,"column":10,"nodeType":"189","messageId":"190","endLine":10,"endColumn":18},{"ruleId":"187","severity":1,"message":"201","line":10,"column":20,"nodeType":"189","messageId":"190","endLine":10,"endColumn":31},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"192","line":17,"column":7,"nodeType":"189","messageId":"190","endLine":17,"endColumn":11},{"ruleId":"187","severity":1,"message":"193","line":28,"column":7,"nodeType":"189","messageId":"190","endLine":28,"endColumn":13},{"ruleId":"187","severity":1,"message":"200","line":7,"column":10,"nodeType":"189","messageId":"190","endLine":7,"endColumn":18},{"ruleId":"187","severity":1,"message":"201","line":7,"column":20,"nodeType":"189","messageId":"190","endLine":7,"endColumn":31},{"ruleId":"187","severity":1,"message":"202","line":8,"column":10,"nodeType":"189","messageId":"190","endLine":8,"endColumn":20},{"ruleId":"187","severity":1,"message":"203","line":21,"column":9,"nodeType":"189","messageId":"190","endLine":21,"endColumn":21},{"ruleId":"187","severity":1,"message":"204","line":33,"column":9,"nodeType":"189","messageId":"190","endLine":33,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"205","line":54,"column":11,"nodeType":"189","messageId":"190","endLine":54,"endColumn":19},{"ruleId":"187","severity":1,"message":"194","line":2,"column":16,"nodeType":"189","messageId":"190","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"206","line":22,"column":9,"nodeType":"189","messageId":"190","endLine":22,"endColumn":25},{"ruleId":"187","severity":1,"message":"207","line":26,"column":9,"nodeType":"189","messageId":"190","endLine":26,"endColumn":26},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"212","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":23},{"ruleId":"208","replacedBy":"213"},{"ruleId":"210","replacedBy":"214"},{"ruleId":"208","replacedBy":"215"},{"ruleId":"210","replacedBy":"216"},{"ruleId":"208","replacedBy":"217"},{"ruleId":"210","replacedBy":"218"},{"ruleId":"208","replacedBy":"219"},{"ruleId":"210","replacedBy":"220"},{"ruleId":"187","severity":1,"message":"221","line":39,"column":11,"nodeType":"189","messageId":"190","endLine":39,"endColumn":16},{"ruleId":"187","severity":1,"message":"222","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":20},{"ruleId":"187","severity":1,"message":"223","line":18,"column":11,"nodeType":"189","messageId":"190","endLine":18,"endColumn":18},{"ruleId":"187","severity":1,"message":"224","line":24,"column":11,"nodeType":"189","messageId":"190","endLine":24,"endColumn":15},{"ruleId":"225","severity":1,"message":"226","line":77,"column":7,"nodeType":"227","endLine":80,"endColumn":8},{"ruleId":"187","severity":1,"message":"222","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":20},{"ruleId":"187","severity":1,"message":"223","line":39,"column":11,"nodeType":"189","messageId":"190","endLine":39,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":110,"column":7,"nodeType":"227","endLine":113,"endColumn":8},{"ruleId":"208","replacedBy":"228"},{"ruleId":"210","replacedBy":"229"},{"ruleId":"187","severity":1,"message":"230","line":4,"column":22,"nodeType":"189","messageId":"190","endLine":4,"endColumn":35},{"ruleId":"208","replacedBy":"231"},{"ruleId":"210","replacedBy":"232"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"233","line":4,"column":7,"nodeType":"189","messageId":"190","endLine":4,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'keys' is assigned a value but never used.","'schema' is assigned a value but never used.","'uuidv4' is defined but never used.","'Navbar' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Nav' is defined but never used.","'FormControl' is defined but never used.","'shownKey' is assigned a value but never used.","'setShownKey' is assigned a value but never used.","'showDelete' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'handleCloseModal' is assigned a value but never used.","'mutation' is assigned a value but never used.","'handleCheckAdmin' is assigned a value but never used.","'handleCheckClient' is assigned a value but never used.","no-native-reassign",["234"],"no-negated-in-lhs",["235"],"'AddApiKeyButton' is defined but never used.",["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],"'query' is assigned a value but never used.","'Notification' is defined but never used.","'payload' is assigned a value but never used.","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["234"],["235"],"'setShowDelete' is assigned a value but never used.",["234"],["235"],"'condenseName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]